<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology on Nick</title>
    <link>https://blog.nearwood.net/categories/technology/</link>
    <description>Recent content in Technology on Nick</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2019 Nicholas Earwood</copyright>
    <lastBuildDate>Fri, 12 Jan 2018 02:13:38 +0000</lastBuildDate>
    
	<atom:link href="https://blog.nearwood.net/categories/technology/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Education in Futility: WarpWallet Brute Forcing</title>
      <link>https://blog.nearwood.net/education-in-futility-warpwallet-brute-forcing/</link>
      <pubDate>Fri, 12 Jan 2018 02:13:38 +0000</pubDate>
      
      <guid>https://blog.nearwood.net/education-in-futility-warpwallet-brute-forcing/</guid>
      <description>So, WarpWallet is a so-called brain wallet for Bitcoin. That is, you only have to remember a relatively short password and it generates the corresponding private key for use. It uses a memory and CPU hard set of cryptographic algorithms to ensure that brute-forcing is slowed way down. That is, when generating the private key, it takes considerable time. Their Javascript implementation takes over 10 seconds on my machine.
So the makers of it had challenges setup.</description>
    </item>
    
    <item>
      <title>Reverse Engineering the firmware on a Kenwood DDX9903S</title>
      <link>https://blog.nearwood.net/reverse-engineering-the-firmware-on-a-kenwood-ddx9903s/</link>
      <pubDate>Sat, 28 Oct 2017 03:06:49 +0000</pubDate>
      
      <guid>https://blog.nearwood.net/reverse-engineering-the-firmware-on-a-kenwood-ddx9903s/</guid>
      <description>&lt;p&gt;I bought and really like my Kenwood Excelon DDX9903S headunit. I had it in my WRX, and moved it to my LS430. It supports Android Auto and CarPlay, which I find really useful when driving.&lt;/p&gt;

&lt;p&gt;However, it has a nag screen every time it boots up. This got me curious as to how it worked, and see if it could be patched to skip this disclaimer. I figured it probably ran Linux on a SoC, as pretty much everything does nowadays. So I grabbed the latest firmware for it (mine was already updated to it), and started probing.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;S_V2_7_0008_0600_AT1.zip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Extract that and you get 3 folders under S_V2_7_0008_0600/:&lt;/p&gt;

&lt;pre class=&#34;brush: plain; light: true; title: ; notranslate&#34; title=&#34;&#34;&gt;BOOT_V2_7_0008_0600_release/
MAIN_V1_0_2758_0400/
SOC_V2_7_0008_0600/
&lt;/pre&gt;

&lt;p&gt;In each there&amp;#8217;s a .nfu file, which I&amp;#8217;ve never encountered before. I ran binwalk on each:&lt;/p&gt;

&lt;pre class=&#34;brush: plain; light: true; title: ; notranslate&#34; title=&#34;&#34;&gt;[BOOT_V2_7_0008_0600_release]$ binwalk Boot_2.7.0008.0600.nfu
DECIMAL HEXADECIMAL DESCRIPTION
--------------------------------------------------------------------------------
248776 0x3CBC8 Android bootimg, kernel size: 0 bytes, kernel addr: 0x4F525245, ramdisk size: 1226848850 bytes, ramdisk addr: 0x6C61766E, product name: &#34;ERROR: Cannot read kernel image&#34;
1571592 0x17FB08 ELF, 64-bit LSB shared object, AMD x86-64, version 1 (SYSV)
2358024 0x23FB08 ELF, 64-bit LSB shared object, AMD x86-64, version 1 (SYSV)
3209992 0x30FB08 ELF, 64-bit LSB shared object, AMD x86-64, version 1 (SYSV)
&lt;/pre&gt;

&lt;p&gt;Surprise, surprise, it runs Android. But, I&amp;#8217;m thinking this image is possibly just the firmware updater, and not what I am looking for.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gentoo Linux Tesla – It was only a matter of time…</title>
      <link>https://blog.nearwood.net/gentoo-linux-tesla-it-was-only-a-matter-of-time/</link>
      <pubDate>Thu, 21 Apr 2016 22:07:09 +0000</pubDate>
      
      <guid>https://blog.nearwood.net/gentoo-linux-tesla-it-was-only-a-matter-of-time/</guid>
      <description>Surprise, surprise, my old favorite Gentoo Linux is now running on a Tesla Model S. Hope he doesn&amp;#8217;t emerge world while driving.</description>
    </item>
    
    <item>
      <title>Raspberry Pi Robot – Assembly Part 2</title>
      <link>https://blog.nearwood.net/raspberry-pi-robot-assembly-part-2/</link>
      <pubDate>Tue, 08 Mar 2016 01:47:20 +0000</pubDate>
      
      <guid>https://blog.nearwood.net/raspberry-pi-robot-assembly-part-2/</guid>
      <description>&lt;p&gt;This was the hardest part. If you wire the wrong things together you can brick your Pi. I took some time to decide on which pins to use, and after assembly and testing everything worked. I&amp;#8217;ll explain which pins I picked, but note that this information will not work with other hardware configurations.&lt;a href=&#34;http://www.nearwood.net/wp-content/uploads/IMG_20141227_115202.jpg&#34;&gt;&lt;img class=&#34;aligncenter size-medium wp-image-583&#34; src=&#34;http://www.nearwood.net/wp-content/uploads/IMG_20141227_115202-300x225.jpg&#34; alt=&#34;IMG_20141227_115202&#34; width=&#34;300&#34; height=&#34;225&#34; srcset=&#34;https://www.nearwood.net/wp-content/uploads/IMG_20141227_115202-300x225.jpg 300w, https://www.nearwood.net/wp-content/uploads/IMG_20141227_115202.jpg 800w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Oculus Rift and Touch</title>
      <link>https://blog.nearwood.net/oculus-rift-and-touch/</link>
      <pubDate>Fri, 12 Jun 2015 00:59:51 +0000</pubDate>
      
      <guid>https://blog.nearwood.net/oculus-rift-and-touch/</guid>
      <description>I&amp;#8217;m super excited for the imminent onslaught of consumer grade VR equipment and game support. I think it will change how games are played from now on. Not all games, mind you, it takes a certain level of involvement to strap on a head-mounted display and get into the experience. The military already uses similar technology extensively for training. It&amp;#8217;s just a matter of months before equipment hits shelves.
That said, there&amp;#8217;s a serious problem with it already.</description>
    </item>
    
    <item>
      <title>Action Camera Review: Garmin Virb Elite</title>
      <link>https://blog.nearwood.net/action-camera-review-garmin-virb-elite/</link>
      <pubDate>Fri, 10 Apr 2015 02:51:49 +0000</pubDate>
      
      <guid>https://blog.nearwood.net/action-camera-review-garmin-virb-elite/</guid>
      <description>After seeing a fellow MSNE autocrosser post a video with nice data overlays, I asked what datalogger and software he used. It turns out it wasn&amp;#8217;t just a data logger, it was a camera that gathered his speed, acceleration, and so on for him. It was the Garmin Virb Elite. The &amp;#8216;Elite&amp;#8217; part signifying the difference between the non-sensor, data-less variant.
I&amp;#8217;d never heard of it, and I thought I kept at least a cursory eye on the action camera market.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android on Nick</title>
    <link>https://nearwood.dev/tags/android/</link>
    <description>Recent content in android on Nick</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2019 Nicholas Earwood</copyright>
    <lastBuildDate>Sat, 28 Oct 2017 03:06:49 +0000</lastBuildDate>
    
	<atom:link href="https://nearwood.dev/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reverse Engineering the firmware on a Kenwood DDX9903S</title>
      <link>https://nearwood.dev/reverse-engineering-the-firmware-on-a-kenwood-ddx9903s/</link>
      <pubDate>Sat, 28 Oct 2017 03:06:49 +0000</pubDate>
      
      <guid>https://nearwood.dev/reverse-engineering-the-firmware-on-a-kenwood-ddx9903s/</guid>
      <description>&lt;p&gt;&lt;strong&gt;UPDATE 14 MAR 2020&lt;/strong&gt;: For discussion, see the &lt;a href=&#34;https://groups.google.com/forum/#!forum/kenwood-headunit-reverse-engineering&#34;&gt;Google group&lt;/a&gt;. Comments from the old WordPress site have been migrated there.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I bought and really like my Kenwood Excelon DDX9903S headunit. I had it in my WRX, and moved it to my LS430. It supports Android Auto and CarPlay, which I find really useful when driving.&lt;/p&gt;
&lt;p&gt;However, it has a nag screen every time it boots up. This got me curious as to how it worked, and see if it could be patched to skip this disclaimer. I figured it probably ran Linux on a SoC, as pretty much everything does nowadays. So I grabbed the latest firmware for it (mine was already updated to it), and started probing.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;S_V2_7_0008_0600_AT1.zip&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Extract that and you get 3 folders under S_V2_7_0008_0600/:&lt;/p&gt;
&lt;pre class=&#34;brush: plain; light: true; title: ; notranslate&#34; title=&#34;&#34;&gt;BOOT_V2_7_0008_0600_release/
MAIN_V1_0_2758_0400/
SOC_V2_7_0008_0600/
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Custom Speed app update</title>
      <link>https://nearwood.dev/custom-speed-app-update/</link>
      <pubDate>Fri, 21 Feb 2014 02:15:30 +0000</pubDate>
      
      <guid>https://nearwood.dev/custom-speed-app-update/</guid>
      <description>I update Custom Speed to 1.1. Changes include:
 An actual theme (consistent colors) More units New icon  2.0 will include an actual settings page that will allow the units to be selected from an easier control, a setting for keeping the display on, and other minor UI improvements. There&amp;rsquo;s no ETA currently for 2.0.</description>
    </item>
    
    <item>
      <title>Released my first Android app</title>
      <link>https://nearwood.dev/released-my-first-android-app/</link>
      <pubDate>Thu, 05 Dec 2013 01:00:13 +0000</pubDate>
      
      <guid>https://nearwood.dev/released-my-first-android-app/</guid>
      <description>After searching for a simple GPS Speedometer app that provided a speed readout in more than just 2 units (a free one, of course), I thought it would be the perfect project for my first Android app. It took only a few hours to make it, the Eclipse ADT makes this pretty easy.
Google Play link
I&amp;rsquo;m glad I&amp;rsquo;ve gotten more familiar with the publishing process. It&amp;rsquo;ll help when I release a game I&amp;rsquo;ve been tinkering with for a few years.</description>
    </item>
    
  </channel>
</rss>